import 'dart:async';

import 'package:bintango_indonesian_dictionary/feature/home/repository/translate_repository.dart';
import 'package:bintango_indonesian_dictionary/feature/home/state/translate_state.dart';
import 'package:bintango_indonesian_dictionary/shared/util/analytics/analytics_parameters.dart';
import 'package:bintango_indonesian_dictionary/shared/util/analytics/firebase_analytics.dart';
import 'package:riverpod_annotation/riverpod_annotation.dart';

part 'translate_provider.g.dart';

//Generated by @riverpod
// final homeNotifierProvider =
//     NotifierProvider<HomeNotifier, HomeState>(HomeNotifier.new);

@riverpod
class TranslateNotifier extends _$TranslateNotifier {
  @override
  TranslateState build() {
    return TranslateState();
  }

  late final _translateProvider = ref.read(translateRepositoryProvider);

  Future<void> updateInputText(String text) async {
    state.inputtedText = text;
    state = state.copyWith();

    // await Future.delayed(const Duration(seconds: 2));
    // if (state.inputtedText == text && state.inputtedText.length >= 3) {
    //   FirebaseAnalyticsUtils.eventsTrack(HomeItem.search);
    //   await searchWord();
    //   // unawaited(searchIncludedWords());
    // }
    // await Future.delayed(const Duration(seconds: 2));
    // if (state.inputtedText == text && state.inputtedText.length >= 3) {
    //   await getDetailExplanation();
    // }
  }

  Future<void> searchWord() async {
    if (state.inputtedText.length <= 1) {
      return;
    }
    state.isLoading = true;
    state = state.copyWith();
    final response = await _translateProvider.searchWord(state.inputtedText,);
    if (response != null) {
      state.searchedWord = response;
    }
    state.isLoading = false;
    state = state.copyWith();
  }

  Future<void> getDetailExplanation() async {
    // state.isLoadingGrammarExplanation = true;
    // state = state.copyWith();
    // if (state.translateResponse != null && state.translateResponse!.text.isNotEmpty) {
    //   final response = await _translateProvider.getDetailExplanation(
    //       text: state.isLanguageSourceJapanese
    //           ? state.translateResponse!.text : state.inputtedText,
    //       isSourceJapanese: state.isLanguageSourceJapanese,);
    //   state
    //     ..getDetailExplanationResponse = response
    //     ..isLoadingGrammarExplanation = false;
    //   state = state.copyWith();
    // }
  }

  Future<void> searchIncludedWords() async {
    // state.isLoadingWordList = true;
    // state = state.copyWith();
    // final includedWordList =
    //   await _translateProvider.searchIncludeWords(
    //       state.isLanguageSourceJapanese
    //           ? state.translateResponse?.text ?? '' : state.inputtedText,);
    // state
    //   ..includedWords = includedWordList
    //   ..isLoadingWordList = false;
    // state = state.copyWith();
  }
}
